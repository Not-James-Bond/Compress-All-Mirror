import ILovePDFTool from "@ilovepdf/ilovepdf-js-core/types/ILovePDFTool";
import TaskI from "@ilovepdf/ilovepdf-js-core/tasks/TaskI";
export interface ILovePDFApiI {
    /**
     * Creates a new task for a specific tool.
     * @param taskType - Task to run.
     */
    newTask: (taskType: ILovePDFTool) => TaskI;
    /**
     * Returns a task from ILovePDF servers.
     */
    getTask: (taskId: string) => Promise<TaskI>;
    /**
     * Returns a task lists from ILovePDF servers ordered from newest to older.
     */
    listTasks: (params?: ListTasksParams) => Promise<Array<TaskI>>;
}
export declare type ILovePDFApiParams = {
    file_encryption_key?: string;
};
declare type ListTasksParams = {
    page?: number;
    tool?: string;
    status?: string;
    custom_int?: number;
};
export default class ILovePDFApi implements ILovePDFApiI {
    private auth;
    private xhr;
    private taskFactory;
    constructor(publicKey: string, secretKey: string, params?: ILovePDFApiParams);
    /**
     * @inheritdoc
     */
    newTask(taskType: ILovePDFTool): TaskI;
    /**
     * @inheritdoc
     */
    getTask(taskId: string): Promise<never>;
    /**
     * @inheritdoc
     */
    listTasks(params?: ListTasksParams): Promise<TaskI[]>;
}
export {};
